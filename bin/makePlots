#!/usr/bin/env Rscript
# Admix plot
options(stringsAsFactors = F)
args = commandArgs(T)
library(ggplot2)
library(tidyverse)

CV = read.table(args[1], h=F) %>% 
  select(K = V3, CV = V4)
CV$K = extract_numeric(CV$K)
CV$K = factor(CV$K, levels = sort(unique(CV$K)))

cvp = CV %>% 
  ggplot(aes(x = K, y=CV)) +
  geom_boxplot() + 
  labs(title = "CV error - 100 bootstrap", x = "K", y = "CV error distribution")
ggsave("CV_errors.pdf", plot = cvp, device = "pdf", width = 12, height = 8)

HP = read.table(args[2], h=F) 
colnames(HP) = c("K", "Hprime")
CV$K = factor(CV$K, levels = sort(unique(CV$K)))

hpplot = HP %>% 
  ggplot(aes(x = K, y=Hprime)) +
  geom_point() + 
  geom_lines() + 
  labs(title = "H' values", x = "K", y = "H' values")
ggsave("Hprime_values.pdf", plot = cvp, device = "pdf", width = 12, height = 8)


for (f in args[3:length(args)]){

  fname = paste(args[f], sep = '')
  plotname = paste(fname, '.plot.pdf', sep = '')
  toplot = read.table(fname, h = F)
  toplot$V1 = NULL
  colnames(toplot)[1] = 'POP'
  colnames(toplot)[2] = 'IND'
  
  
  cols<-c("red","lightgreen","darkblue","127","hotpink3","orange","lightblue","#C12869","lightcoral","seagreen","#CCFB5D","#E9CFEC","#C3FDB8","#9E8335","#E8A317","purple","yellowgreen","darkgreen","lightgrey","#7F5217","#5819B3","#5CAFA9","#944B21","#FBB917","#6A287E","#7D0552","#C38EC7","#C9C299","blue","#6C4403","#738017","#43C6DB","#EDE275","darkgray","#C34A2C","black","pink","#736AFF","#B93B8F")
  
  # Change individual bar size depending on sample size
  if (dim(toplot)[1] <=50){
    linesize=0.7
    titleSize = 1
    labelsSize = 1
  } else if (dim(toplot)[1] > 50 && dim(toplot)[1] <=100){
    linesize=0.5
    titleSize = 1.5
    labelsSize = 2
  } else if (dim(toplot)[1] > 100 && dim(toplot)[1] <=150){
    linesize=0.2
    titleSize = 2
    labelsSize = 3
  } else if (dim(toplot)[1] > 150 && dim(toplot)[1] <=200){
    linesize=0.14
    titleSize = 3
    labelsSize = 4
  } else {
    linesize=0.075
    titleSize = 4
    labelsSize = 5
  }
  
  pdf(plotname, height = 14, width = (linesize * dim(toplot)[1]))
  
  
  par(cex=2.5, oma=c(4,0,0,0))
  row.names(toplot)<-NULL
  barplot(t(as.matrix(toplot[,3:dim(toplot)[2]])), col=cols,
          xlab="", border=NA, axes = FALSE,ylab="Ancestry", 
          space=0)
  
  # Inserisco le etichette.
  pops=as.character(unique(toplot$POP))
  numpop=length(unique(toplot$POP))
  eticok=rep(NA, times=numpop)
  axis(2)
  
  for (a in 1:numpop){
    valor=length(which(toplot[,1] == pops[a]))
    eticall=max(which(toplot[,1]==pops[a]))
    etic=eticall-(valor/2)
    eticok[a]=etic
    mtext(pops[a],at=eticok[a],side=1,line=2.5,las=2)
    #   if (a%%2 == 0){
    #     mtext(pops[a],at=eticok[a],side=1,line=1,las=2)
    #   } else {
    #     mtext(pops[a],at=eticok[a],side=1,line=2.5,las=2)
    #   }
    if (a!=numpop){
      abline(v=eticall, lwd=2)
    }
  }
  
  # for (i in 1:dim(toplot)[1]){
  #   mtext(toplot[i, 2],at=i,side=1,line=1,las=2, cex = .5)
  #   abline(v=i,lty = 2)
  # }
  dev.off()
}

